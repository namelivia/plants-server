version: '3'
services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: plants-server-app
    restart: unless-stopped
    depends_on:
        - database
    tty: true
    working_dir: /app
    expose:
      - "80"
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: "postgresql://user:password@database/plants"
      TEST_DATABASE_URL: "sqlite:///./test.db"
      NOTIFICATIONS_SERVICE_ENDPOINT: "http://notifications-service:80"
      IMAGES_SERVICE_ENDPOINT: "http://images-service:80/image"
    command: [
        "pipenv",
        "run",
        "uvicorn",
        "app.main:app",
        "--reload",
        "--host=0.0.0.0",
        "--port=80"
    ]
    networks:
      - app-network

  #Postgres Service
  database:
    image: postgres:latest
    container_name: plants-server-database
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: plants
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  #Pomerium proxy
  plants-auth-proxy:
    image: pomerium/pomerium:v0.11.0-rc1
    container_name: plants_proxy
    restart: unless-stopped
    tty: true
    ports:
      - "443:443"
    volumes:
      - ./pomerium/config.yaml:/pomerium/config.yaml
      - ./certs/localhost.crt:/pomerium/cert.pem:ro
      - ./certs/localhost.key:/pomerium/privkey.pem:ro
    networks:
      - app-network

  #Images service
  images-service:
    image: minimalcompact/thumbor:latest
    container_name: images-service
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    networks:
      - app-network
    environment:
        UPLOAD_ENABLED: "True"
        LOG_LEVEL: "debug"
        ALOW_UNSAFE_URL: "True"


#Docker Networks
networks:
  app-network:
    driver: bridge
